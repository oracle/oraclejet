// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the
// version in your the theme specific directory,
// for example off-canvas/themes/redwood/oj-off-canvas.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../../utilities/_oj.utilities.modules.scss";

@include module-include-once("common.offcanvas") {
  /*
     * applied to the outer most element of the offcanvas
     */
  .oj-offcanvas-outer-wrapper {
    overflow-x: hidden;
    overflow-y: hidden;
    position: relative;
    width: 100%;
    box-sizing: border-box;
  }

  /*
     * applied to the inner wrapper of the offcanvas in push mode
     */
  .oj-offcanvas-inner-wrapper,
  .oj-offcanvas-inner-push-wrapper {
    position: relative;
    height: 100%;
  }

  /*
     * only applied to the page level offcanvas
     */
  .oj-offcanvas-page > .oj-offcanvas-open {
    position: fixed;
  }

  /*
     * only applied to the outer wrapper of page level offcanvas
     */
  .oj-offcanvas-outer-wrapper.oj-offcanvas-page {
    overflow-y: visible;
  }

  /*
     * Transition selector is only applied while the offcanvas is activating.
     * In push mode, it's applied to the inner wrapper of the offcanvas.
     * In overlay mode, it's applied to the offcanvas element.
     */
  .oj-offcanvas-transition {
    transition: transform var(--oj-animation-duration-long);
    backface-visibility: hidden;

    transition-timing-function: var(--oj-animation-ease-in-out);
  }

  /*
     * applied to the outer wrapper when displayMode = pin
     */
  .oj-offcanvas-outer-wrapper.oj-offcanvas-pin {
    display: flex;
    flex-wrap: nowrap;
  }

  .oj-offcanvas-pin .oj-offcanvas-start {
    position: relative;
  }

  /*
     * Pin transition selector is only applied to the offcanvas in the pin mode.
     */
  .oj-offcanvas-pin-transition {
    min-width: 0;

    transition: min-width var(--oj-animation-duration-long);
    backface-visibility: hidden;

    transition-timing-function: var(--oj-animation-ease-in-out);
  }

  // common to all edges
  %oj-offcanvas-edge {
    position: absolute;
    box-sizing: border-box;
    border-radius: 0;

    //don't allow user tab into the offcanvas when it's closed.
    display: none;
  }

  // common to start/end
  %oj-offcanvas-start-end {
    height: 100%;
    bottom: 0;
    overflow-x: hidden;
    overflow-y: auto;
  }

  // common to top/bottom
  %oj-offcanvas-top-bottom {
    width: 100%;
    left: 0;
    right: 0;
    overflow-x: auto;
    overflow-y: hidden;
  }

  /*
     * applied to the offcanvas on the start edge
     */
  .oj-offcanvas-start {
    @extend %oj-offcanvas-start-end;
    top: 0;

    @include oj-ltr() {
      transform: translate3d(-100%, 0, 0);
      left: 0;
      border-width: 0 1px 0 0;
    }
    @include oj-rtl() {
      transform: translate3d(100%, 0, 0);
      right: 0;
      border-width: 0 0 0 1px;
    }
  }

  /*
     * applied to the offcanvas on the end edge
     */
  .oj-offcanvas-end {
    @extend %oj-offcanvas-start-end;

    @include oj-ltr() {
      right: 0;
      transform: translate3d(100%, 0, 0);
      border-width: 0 0 0 1px;
    }
    @include oj-rtl() {
      left: 0;
      transform: translate3d(-100%, 0, 0);
      border-width: 0 1px 0 0;
    }
  }

  /*
     * applied to the offcanvas on the top edge
     */
  .oj-offcanvas-top {
    @extend %oj-offcanvas-top-bottom;
    border-width: 0 0 1px;
    top: 0;
    transform: translate3d(0, -100%, 0);
  }

  /*
     * applied to the offcanvas on the bottom edge
     */
  .oj-offcanvas-bottom {
    @extend %oj-offcanvas-top-bottom;
    border-width: 1px 0 0 0;
    bottom: 0;
    transform: translate3d(0, 100%, 0);
  }

  /*
     * applied to the offcanvas when it is open
     */
  .oj-offcanvas-start.oj-offcanvas-open,
  .oj-offcanvas-end.oj-offcanvas-open,
  .oj-offcanvas-top.oj-offcanvas-open,
  .oj-offcanvas-bottom.oj-offcanvas-open {
    display: block;
    z-index: var(--oj-private-core-z-index-off-canvas);
  }

  /* 
     * Suppress focus ring
     */
  .oj-offcanvas-start:not(.oj-focus-highlight):focus,
  .oj-offcanvas-end:not(.oj-focus-highlight):focus,
  .oj-offcanvas-top:not(.oj-focus-highlight):focus,
  .oj-offcanvas-bottom:not(.oj-focus-highlight):focus {
    outline: none;
  }

  /*
     * applied to all edges
     */
  .oj-offcanvas-outer-wrapper {
    .oj-offcanvas-start,
    .oj-offcanvas-end,
    .oj-offcanvas-top,
    .oj-offcanvas-bottom {
      @extend %oj-offcanvas-edge;
    }
  }

  /*
     * Overlay: start and end offcanvases shift
     */
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-start > .oj-offcanvas-overlay,
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-end > .oj-offcanvas-overlay,
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-start > .oj-offcanvas-inner-wrapper > .oj-offcanvas-overlay,
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-end > .oj-offcanvas-inner-wrapper > .oj-offcanvas-overlay {
    transform: translate3d(0%, 0, 0);
  }

  /*
     * Overlay: top and bottom offcanvases shift
     */
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-down > .oj-offcanvas-overlay,
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-up > .oj-offcanvas-overlay,
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-down > .oj-offcanvas-inner-wrapper > .oj-offcanvas-overlay,
  .oj-offcanvas-outer-wrapper.oj-offcanvas-shift-up > .oj-offcanvas-inner-wrapper > .oj-offcanvas-overlay {
    transform: translate3d(0, 0%, 0);
  }

  /*
     * Applied to the glass pane of modal offcanvas
     */
  .oj-offcanvas-glasspane {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: transparent;
    transition: background 0.5s;
    transition-timing-function: var(--oj-animation-ease-in-out);
    z-index: var(--oj-private-core-z-index-off-canvas);
  }

  /*
     * glass pane opacity after animation
     */
  .oj-offcanvas-glasspane-dim {
    background: var(--oj-core-scrim-color);
  }

  /*
     * applied to the overlay offcanvas when it is open
     */

  html:not([dir="rtl"]) .oj-offcanvas-start.oj-offcanvas-overlay.oj-offcanvas-open.oj-offcanvas-overlay-shadow {
    box-shadow: 8px 0px 15px unquote("rgba(var(--oj-core-box-shadow-rgb), 0.05)");
  }
  html[dir="rtl"] .oj-offcanvas-start.oj-offcanvas-overlay.oj-offcanvas-open.oj-offcanvas-overlay-shadow {
    box-shadow: -8px 0px 15px unquote("rgba(var(--oj-core-box-shadow-rgb), 0.10)");
  }
  html:not([dir="rtl"]) .oj-offcanvas-end.oj-offcanvas-overlay.oj-offcanvas-open.oj-offcanvas-overlay-shadow {
    box-shadow: -8px 0px 15px unquote("rgba(var(--oj-core-box-shadow-rgb), 0.05)");
  }
  html[dir="rtl"] .oj-offcanvas-end.oj-offcanvas-overlay.oj-offcanvas-open.oj-offcanvas-overlay-shadow {
    box-shadow: 8px 0px 15px unquote("rgba(var(--oj-core-box-shadow-rgb), 0.05)");
  }
  .oj-offcanvas-top.oj-offcanvas-overlay.oj-offcanvas-open.oj-offcanvas-overlay-shadow {
    box-shadow: 0px 3px 3px 0 unquote("rgba(var(--oj-core-box-shadow-rgb), 0.05)");
  }
  .oj-offcanvas-bottom.oj-offcanvas-overlay.oj-offcanvas-open.oj-offcanvas-overlay-shadow {
    box-shadow: 0px -8px 15px unquote("rgba(var(--oj-core-box-shadow-rgb), 0.05)");
  }

}

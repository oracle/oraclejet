/**
 * @license
 * Copyright (c) 2014, 2023, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojeventtarget","ojs/ojcomponentcore"],function(t,e,a){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t;
/**
     * @license
     * Copyright (c) 2014, 2023, Oracle and/or its affiliates.
     * Licensed under The Universal Permissive License (UPL), Version 1.0
     * @ignore
     */
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class r{constructor(e,a){var s,i;this.dataProvider=e,this.options=a,this.CacheAsyncIterable=(i=class{constructor(t,e,a,r){this._parent=t,this.dataProviderAsyncIterator=e,this.params=a,this.cache=r,this[s]=()=>new this._parent.CacheAsyncIterator(this._parent,this.dataProviderAsyncIterator,this.params,this.cache)}},s=Symbol.asyncIterator,i),this.CacheAsyncIterator=class{constructor(t,e,a,r){this._parent=t,this.asyncIterator=e,this.params=a,this.cache=r,this._cachedOffset=0,this._needLocalRowCount="enabled"===t.options?.includeFilteredRowCount&&"enabled"===a?.includeFilteredRowCount&&"exact"!==t._baseFetchFirstCapability?.totalFilteredRowCount}next(){const t=this.params,e=t?.size?t.size:-1,a=t?.signal;if(a&&a.aborted){const t=a.reason;return Promise.reject(new DOMException(t,"AbortError"))}return new Promise((r,s)=>{if(a){const t=a.reason;a.addEventListener("abort",e=>s(new DOMException(t,"AbortError")))}return this._needLocalRowCount&&0===this._cachedOffset?r(this._checkCachedParamsAndIterate(t,-1).then(a=>this._getResult(t,e,this._parent.cache.getSize()))):r(this._getResult(t,e,this._needLocalRowCount?this._parent.cache.getSize():void 0))})}_getResult(t,e,a){let r;if(-1===e){if(this.cache.isDone())return r=this.cache.getDataList(t,this._cachedOffset),this._cachedOffset=this._cachedOffset+r.data.length,Promise.resolve(this._getFinalResult(r,a))}else{if(this.cache.getSize()>=this._cachedOffset+e||this.cache.isDone())return r=this.cache.getDataList(t,this._cachedOffset),this._cachedOffset=this._cachedOffset+r.data.length,Promise.resolve(this._getFinalResult(r,a));if(this._cachedOffset>0)return new Promise((a,r)=>{if(this._parent._getSharedIteratorState().fetchOffset<this._cachedOffset){const r=()=>this._checkCachedParamsAndIterate(t,e).then(t=>{if(!(this._parent._getSharedIteratorState().fetchOffset>=this._cachedOffset||t.done))return r();a()});return r()}a()}).then(()=>this._checkCachedParamsAndIterate(t,e).then(t=>(this._cachedOffset=this._parent._getSharedIteratorState().fetchOffset,Promise.resolve(this._getFinalResult(t.value,a)))))}return this._checkCachedParamsAndIterate(t,e).then(t=>(this._cachedOffset=this._parent._getSharedIteratorState().fetchOffset,Promise.resolve(this._getFinalResult(t.value,a))))}_getFinalResult(t,e){return t?.data?.length>0?new this._parent.CacheAsyncIteratorYieldResult(t,e):new this._parent.CacheAsyncIteratorReturnResult(t,e)}_checkCachedParamsAndIterate(t,e){let a,s=this._parent._getSharedIteratorState().cachedFetchParams,i=this._parent._getSharedIteratorState().fetchOffset,c=this._parent._getSharedIteratorState().fetchPromise;return c&&this._cachedOffset===i&&r._compareCachedFetchParameters(t,s)?a=c:(this._parent._getSharedIteratorState().cachedFetchParams=r._createCachedFetchParams(t),this._parent._getSharedIteratorState().fetchPromise=this.asyncIterator.next().then(t=>(this._parent._getSharedIteratorState().fetchOffset=this._parent._getSharedIteratorState().fetchOffset+t.value.data.length,this._parent._getSharedIteratorState().fetchPromise=null,this.cache.addListResult(t),-1===e&&!this.cache.isDone()||e>0&&!this.cache.isDone()&&t.value.data.length<e?this.asyncIterator.next().then(e=>(this.cache.addListResult(e),t)):t)),a=this._parent._getSharedIteratorState().fetchPromise),a}},this.CacheAsyncIteratorYieldResult=class{constructor(t,e){this.value=t,this[r._VALUE]=void 0!==e?Object.assign({totalFilteredRowCount:e},t):t,this[r._DONE]=!1}},this.CacheAsyncIteratorReturnResult=class{constructor(t,e){this.value=t,this[r._VALUE]=void 0!==e?Object.assign({totalFilteredRowCount:e},t):t,this[r._DONE]=!0}},this.cache=new t.DataCache,this._lastFetchParams=null,e.createOptimizedKeyMap&&(this.createOptimizedKeyMap=t=>e.createOptimizedKeyMap(t)),e.createOptimizedKeySet&&(this.createOptimizedKeySet=t=>e.createOptimizedKeySet(t)),e.addEventListener(r._MUTATE,t=>{this.cache.processMutations(t.detail),this.dispatchEvent(t)}),e.addEventListener(r._REFRESH,t=>{this.cache.reset(),this._lastFetchParams=null,this.dispatchEvent(t)}),this._baseFetchFirstCapability=e.getCapability("fetchFirst")}containsKeys(t){const e=new Set,a=new Set,r=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{r.results.get(t)?e.add(t):a.add(t)}),0===a.size)return Promise.resolve({containsParameters:t,results:e});{const r={attributes:t.attributes,keys:a,scope:t.scope};return this.dataProvider.containsKeys(r).then(a=>(a.results.forEach(t=>{e.add(t)}),{containsParameters:t,results:e}))}}fetchByKeys(t){const e=new Map,a=new Set,r=t?.signal;if(r&&r.aborted){const t=r.reason;return Promise.reject(new DOMException(t,"AbortError"))}return new Promise((s,i)=>{if(r){const t=r.reason;r.addEventListener("abort",e=>i(new DOMException(t,"AbortError")))}const c=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{const r=c.results.get(t);r?e.set(t,r):a.add(t)}),0===a.size)return s({fetchParameters:t,results:e});{const r={attributes:t.attributes,keys:a,scope:t.scope};return s(this.dataProvider.fetchByKeys(r).then(a=>(a.results.forEach((t,a)=>{e.set(a,t)}),{fetchParameters:t,results:e})))}})}fetchByOffset(t){const e=t.size?t.size:r._DEFAULT_SIZE,a=t?.signal;if(a&&a.aborted){const t=a.reason;return Promise.reject(new DOMException(t,"AbortError"))}return new Promise((s,i)=>{if(a){const t=a.reason;a.addEventListener("abort",e=>i(new DOMException(t,"AbortError")))}if(r._compareCachedFetchParameters(t,this._lastFetchParams)&&t.offset+e<=this.cache.getSize()){const a=JSON.parse(JSON.stringify(t,(t,e)=>{if(!t.startsWith("_"))return e}));a.size=e;const r=this.cache.getDataByOffset(a);if(r)return s(r)}return s(this.dataProvider.fetchByOffset(t))})}fetchFirst(t){if(!r._compareCachedFetchParameters(t,this._lastFetchParams)){this.cache.reset(),this._lastFetchParams=r._createCachedFetchParams(t);const e=this.dataProvider.fetchFirst(t)[Symbol.asyncIterator]();this._firstIteratorState={cachedFetchParams:this._lastFetchParams,fetchOffset:0,fetchPromise:null,asyncIterator:e}}return new this.CacheAsyncIterable(this,this._getSharedIteratorState().asyncIterator,t,this.cache)}getCapability(t){const e=this.dataProvider.getCapability(t);return"fetchCapability"===t?{attributeFilter:e?.attributeFilter,caching:"visitedByCurrentIterator"}:e}getTotalSize(){return null!=this._lastFetchParams&&!this._lastFetchParams.filterDef&&this.cache.isDone()?Promise.resolve(this.cache.getSize()):this.dataProvider.getTotalSize()}isEmpty(){return null!=this._lastFetchParams&&!this._lastFetchParams.filterDef&&this.cache.isDone()?0===this.cache.getSize()?"yes":"no":this.dataProvider.isEmpty()}_getSharedIteratorState(){return this._firstIteratorState}static _compareCachedFetchParameters(e,a){return e=e||{},null!=a&&t.Object.compareValues(a.attributes,e.attributes||null)&&t.Object.compareValues(a.filterDef,r._getFilterDef(e.filterCriterion))&&t.Object.compareValues(a.sortCriteria,e.sortCriteria||null)}static _createCachedFetchParams(t){t=t||{};const e={};return e.size=t.size,e.attributes=t.attributes?JSON.parse(JSON.stringify(t.attributes)):null,e.filterDef=r._getFilterDef(t.filterCriterion),e.sortCriteria=t.sortCriteria?JSON.parse(JSON.stringify(t.sortCriteria)):null,e}static _getFilterDef(t){if(!t)return null;const e={};return Object.keys(t).forEach(a=>{"filter"!==a&&(e[a]=t[a])}),e}}return r._KEY="key",r._KEYS="keys",r._DATA="data",r._STARTINDEX="startIndex",r._SORT="sort",r._SORTCRITERIA="sortCriteria",r._FILTERCRITERION="filterCriterion",r._METADATA="metadata",r._ITEMS="items",r._FROM="from",r._OFFSET="offset",r._REFRESH="refresh",r._MUTATE="mutate",r._SIZE="size",r._FETCHPARAMETERS="fetchParameters",r._VALUE="value",r._DONE="done",r._RESULTS="results",r._CONTAINSPARAMETERS="containsParameters",r._DEFAULT_SIZE=25,r._CONTAINSKEYS="containsKeys",r._FETCHBYKEYS="fetchByKeys",r._FETCHBYOFFSET="fetchByOffset",r._FETCHFIRST="fetchFirst",r._ADDEVENTLISTENER="addEventListener",r._FETCHATTRIBUTES="attributes",e.EventTargetMixin.applyMixin(r),t._registerLegacyNamespaceProp("CachedIteratorResultsDataProvider",r),r});
//# sourceMappingURL=ojcachediteratorresultsdataprovider.js.map
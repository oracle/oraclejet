/**
 * @license
 * Copyright (c) 2014, 2023, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["exports","ojs/ojeventtarget"],function(t,e){"use strict";
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */class r{constructor(t,e){var r,s;this.treeDataProvider=t,this.options=e,this.SuppressNodeTreeAsyncIterable=(s=class{constructor(t,e){this._parent=t,this._asyncIterator=e,this[r]=()=>new this._parent.SuppressNodeTreeAsyncIterator(this._parent,this._asyncIterator)}},r=Symbol.asyncIterator,s),this.SuppressNodeTreeAsyncIterator=class{constructor(t,e,r){this._parent=t,this._baseIterator=e,this._params=r}_fetchNext(){return this._baseIterator.next()}next(){const t=this._params?.signal;if(t&&t.aborted){const e=t.reason;return Promise.reject(new DOMException(e,"AbortError"))}return new Promise((e,r)=>{if(t){const e=t.reason;t.addEventListener("abort",t=>r(new DOMException(e,"AbortError")))}return e(this._fetchNext().then(t=>this._parent._suppressNodeIfEmptyChildrenFirst(t)))})}},this.AsyncIteratorYieldResult=class{constructor(t){this.value=t,this.done=!1}},this.AsyncIteratorReturnResult=class{constructor(t){this.value=t,this.done=!0}},this.FetchListResult=class{constructor(t,e,r,s){this.fetchParameters=t,this.data=e,this.metadata=r,this.totalFilteredRowCount=s}},this.FetchByOffsetResults=class{constructor(t,e,r){this.fetchParameters=t,this.results=e,this.done=r}},this.Item=class{constructor(t,e){this.metadata=t,this.data=e}}}containsKeys(t){return this.treeDataProvider.containsKeys(t)}getCapability(t){return this.treeDataProvider.getCapability(t)}getTotalSize(){return this.treeDataProvider.getTotalSize()}isEmpty(){return this.treeDataProvider.isEmpty()}createOptimizedKeySet(t){return this.treeDataProvider.createOptimizedKeySet(t)}createOptimizedKeyMap(t){return this.treeDataProvider.createOptimizedKeyMap(t)}getChildDataProvider(t){const e=this.treeDataProvider.getChildDataProvider(t);return null===e?null:new r(e,this.options)}fetchFirst(t){const e=this.treeDataProvider.fetchFirst(t);return new this.SuppressNodeTreeAsyncIterable(this,e[Symbol.asyncIterator]())}fetchByOffset(t){const e=t?.signal;if(e&&e.aborted){const t=e.reason;return Promise.reject(new DOMException(t,"AbortError"))}return new Promise((r,s)=>{if(e){const t=e.reason;e.addEventListener("abort",e=>s(new DOMException(t,"AbortError")))}return r(this.treeDataProvider.fetchByOffset(t).then(t=>this._suppressNodeIfEmptyChildrenByOffset(t)))})}fetchByKeys(t){const e=t?.signal;if(e&&e.aborted){const t=e.reason;return Promise.reject(new DOMException(t,"AbortError"))}return new Promise((r,s)=>{if(e){const t=e.reason;e.addEventListener("abort",e=>s(new DOMException(t,"AbortError")))}return r(this.treeDataProvider.fetchByKeys(t))})}_suppressNodeIfEmptyChildrenByOffset(t){if(t.results&&this.options&&"ifEmptyChildren"==this.options.suppressNode){const e=[],r=[];return new Promise(s=>{for(let e=0;e<t.results.length;e++){const s=t.results[e];r[e]=this._suppressChild(s.metadata.key,t.fetchParameters?t.fetchParameters.filterCriterion:null)}return Promise.all(r).then(r=>{for(let s=0;s<r.length;s++)!1===r[s]&&e.push(new this.Item(t.results[s].metadata,t.results[s].data));return s(e)})}).then(e=>new this.FetchByOffsetResults(t.fetchParameters,e,t.done))}return Promise.resolve(t)}_suppressNodeIfEmptyChildrenFirst(t){const e=[];if(!t.done&&this.options&&"ifEmptyChildren"==this.options.suppressNode){return new Promise(r=>{if(t&&t.value&&t.value.data){const s=t.value.metadata,a=t.value.data,i=[];for(let r=0;s&&r<s.length;r++)e[r]=this._suppressChild(s[r].key,t.value.fetchParameters?t.value.fetchParameters.filterCriterion:null);return Promise.all(e).then(e=>{for(let r=0;r<e.length;r++)!1===e[r]&&i.push({data:a[r],metadata:s[r],totalFilteredRowCount:t.value.totalFilteredRowCount});return r(i)})}return{data:t.value.data,metadata:t.value.metadata,totalFilteredRowCount:t.value.totalFilteredRowCount}}).then(e=>{const r=[],s=[];for(const t of e)r.push(t.data),s.push(t.metadata);return new this.AsyncIteratorYieldResult(new this.FetchListResult(t.value.fetchParameters,r,s,t.value.totalFilteredRowCount))})}return Promise.resolve(t)}_suppressChild(t,e){const r=this.getChildDataProvider(t);return null==r||"yes"===r.isEmpty()?Promise.resolve(null!==r):e?r.fetchByOffset({offset:0,filterCriterion:e}).then(t=>!(t&&t.results&&t.results.length>0)):"unknown"===r.isEmpty()?r.fetchByOffset({offset:0,size:1}).then(t=>!(t&&t.results&&t.results.length>0)):Promise.resolve(!1)}}e.EventTargetMixin.applyMixin(r),t.SuppressNodeTreeDataProvider=r,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ojsuppressnodetreedataprovider.js.map
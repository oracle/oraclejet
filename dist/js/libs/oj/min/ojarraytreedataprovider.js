/**
 * @license
 * Copyright (c) 2014, 2024, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","jquery","ojs/ojarraydataprovider","ojs/ojeventtarget","ojs/ojlogger"],function(e,t,r,s,a){"use strict";e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r;
/**
   * @preserve Copyright 2013 jQuery Foundation and other contributors
   * Released under the MIT license.
   * http://jquery.org/license
   */
class i{constructor(e,t,s){var a;this.treeData=e,this.options=t,this._rootDataProvider=s,this.TreeAsyncIterator=class{constructor(e,t){this._parent=e,this._baseIterable=t}next(){return this._baseIterable[Symbol.asyncIterator]().next().then(e=>{const t=e.value.metadata;for(let r=0;r<t.length;r++)t[r]=this._parent._getTreeMetadata(t[r],e.value.data[r]);return e})}},this.TreeAsyncIterable=(a=class{constructor(e,t){this._parent=e,this._asyncIterator=t,this[Symbol.asyncIterator]=()=>this._asyncIterator}},Symbol.asyncIterator,a),this._baseDataProvider=new r(e,t),this._mapKeyToNode=new Map,this._mapNodeToKey=new Map,this._mapArrayToSequenceNum=new Map,this._mapKoArrayToSubscriptions=new Map,this._mapKeyToParentNodePath=new Map,this._parentNodeKeys=new Set,this._childrenAttr=this.options&&this.options.childrenAttribute?this.options.childrenAttribute:"children",null==s?(this._parentNodePath=[],this._processTreeArray(e,[])):this._getTreeKeys(this.treeData)}containsKeys(e){return this.fetchByKeys(e).then(t=>{const r=new Set;return e.keys.forEach(e=>{null!=t.results.get(e)&&r.add(e)}),Promise.resolve({containsParameters:e,results:r})})}getCapability(e){return this._baseDataProvider.getCapability(e)}getTotalSize(){return this._baseDataProvider.getTotalSize()}isEmpty(){return this._baseDataProvider.isEmpty()}createOptimizedKeySet(e){return this._baseDataProvider.createOptimizedKeySet(e)}createOptimizedKeyMap(e){return this._baseDataProvider.createOptimizedKeyMap(e)}getChildDataProvider(e,t){const r=this._getRootDataProvider(),s=this._getNodeForKey(e);if(s){const t=this._getChildren(s);if(t){const s=new i(t,this.options,r);return null!=s&&(s._parentNodePath=r._mapKeyToParentNodePath.get(JSON.stringify(e)),r.addEventListener("refresh",e=>{s._getTreeKeys(t)}),r.addEventListener("mutate",e=>{s._getTreeKeys(t)})),s}}return null}fetchFirst(e){e=this._applyLeafNodeFilter(e);const t=this._baseDataProvider.fetchFirst(e);return new this.TreeAsyncIterable(this,new this.TreeAsyncIterator(this,t))}fetchByOffset(e){e=this._applyLeafNodeFilter(e);return this._baseDataProvider.fetchByOffset(e).then(t=>{const r=t.results,s=[];for(const e of r){let t=e.metadata;const r=e.data;t=this._getTreeMetadata(t,r),s.push({data:r,metadata:t})}const a={done:t.done,fetchParameters:t.fetchParameters,results:s};return"enabled"===e.includeFilteredRowCount&&(a.totalFilteredRowCount=t.totalFilteredRowCount),a})}fetchByKeys(e){const t=new Map;return e.keys.forEach(e=>{if(0===this._parentNodePath.length||this._parentNodeKeys.has(e)){const r=this._getNodeForKey(e);r&&t.set(e,{metadata:{key:e},data:r})}}),Promise.resolve({fetchParameters:e,results:t})}_getTreeKeys(e){const t=e instanceof Array?e:e();for(const e of t){const t=this._getKeyForNode(e);this._parentNodeKeys.add(t),e[this._childrenAttr]&&this._getTreeKeys(e[this._childrenAttr])}}_getChildren(e){return this._getVal(e,this._childrenAttr,!0)}_getRootDataProvider(){return this._rootDataProvider?this._rootDataProvider:this}_subscribeObservableArray(t,r){if("function"!=typeof t||!t.subscribe||void 0===t.destroyAll)throw new Error("Invalid data type. ArrayTreeDataProvider only supports Array or observableArray.");let s=null,a=null;const i=new Array(2);i[0]=t.subscribe(i=>{let o,n,h,l=[],d=[],u=[],y=[];const c=[];let p=null,_=null,f=null;const g=new Set,b=[],v=[];for(let e=0;e<i.length;e++)v[e]={index:i[e].index,status:i[e].status};for(let e=0;e<v.length;e++){const t=v[e].index,r=v[e].status;if("deleted"===r)for(let e=0;e<v.length;e++)"deleted"===v[e].status&&v[e].index>t&&v[e].index--;else if("added"===r)for(let e=0;e<v.length;e++)"added"===v[e].status&&v[e].index>t&&v[e].index++}for(o=0;o<v.length;o++){h=v[o].index,status=v[o].status;const t=this._getId(i[o].value);if(t)for(n=0;n<v.length;n++)if(n!==o&&h===v[n].index&&status!==v[n].status&&c.indexOf(o)<0&&b.indexOf(o)<0){const r=this._getId(i[n].value);e.Object.compareValues(t,r)&&("deleted"===status?(b.push(o),c.push(n),this._releaseNode(i[o].value)):(b.push(n),c.push(o)),this._compareChildren(i[o].value,i[n].value)||g.add(t))}}for(o=0;o<i.length;o++)if("deleted"===i[o].status&&c.indexOf(o)<0&&b.indexOf(o)<0){const e=i[o].value,t=this._getKeyForNode(e);d.push(t),l.push(e),u.push(i[o].index),this._releaseNode(e)}if(d.length>0){y=d.map(e=>({key:e}));const e=new Set;d.forEach(t=>{e.add(t)}),f={data:l,indexes:u,keys:e,metadata:y}}l=[],d=[],u=[],y=[];const m=t(),A=[],N=[],K=[],P=[];for(o=0;o<i.length;o++)if("added"===i[o].status&&b.indexOf(o)<0){const e=i[o].value,s=this._processNode(e,r,t);c.indexOf(o)<0?(d.push(s.key),l.push(e),u.push(i[o].index),y.push({key:s.key})):(A.push(s.key),N.push(e),K.push(i[o].index),P.push({key:s.key}))}if(d.length>0){const e=new Set;d.forEach(t=>{e.add(t)});const t=new Set,s=[],a=[];let i;i=this.options&&this.options.keyAttributes&&"siblings"!==this.options.keyAttributesScope?r.length>0?r[r.length-1]:null:r.length>0?r:null,u.forEach(e=>{let r;r=e>=m.length-1?null:this._getKeyForNode(m[e+1]),t.add(r),s.push(r),a.push(i)}),_={afterKeys:t,addBeforeKeys:s,parentKeys:a,data:l,indexes:u,keys:e,metadata:y}}if(A.length>0){const e=new Set;A.forEach(t=>{e.add(t)}),p={data:N,indexes:K,keys:e,metadata:P}}(_||f||p)&&(s=new e.DataProviderMutationEvent({add:_,remove:f,update:p})),g.size&&(a=new e.DataProviderRefreshEvent({keys:g}))},null,"arrayChange"),i[1]=t.subscribe(t=>{s||a?(s&&this.dispatchEvent(s),a&&this.dispatchEvent(a)):(this._flushMaps(),this._processTreeArray(this.treeData,[]),this.dispatchEvent(new e.DataProviderRefreshEvent)),s=null,a=null},null,"change"),this._mapKoArrayToSubscriptions.set(t,i)}_flushMaps(){const e=this._getRootDataProvider();e._mapKeyToNode.clear(),e._mapNodeToKey.clear(),e._mapArrayToSequenceNum.clear(),e._mapKoArrayToSubscriptions.forEach((e,t)=>{this._unsubscribeObservableArray(t)})}_unsubscribeObservableArray(e){if("function"==typeof e&&e.subscribe&&void 0!==e.destroyAll){const t=this._mapKoArrayToSubscriptions.get(e);t&&(t[0].dispose(),t[1].dispose(),this._mapKoArrayToSubscriptions.delete(e))}}_processTreeArray(e,t){let r;e instanceof Array?r=e:(this._subscribeObservableArray(e,t),r=e()),r.forEach((r,s)=>{this._processNode(r,t,e)})}_releaseTreeArray(e){let t;e instanceof Array?t=e:(this._unsubscribeObservableArray(e),t=e()),t.forEach((e,t)=>{this._releaseNode(e)})}_processNode(e,t,r){const s=this._createKeyObj(e,t,r);this._setMapEntry(s.key,e);this._getRootDataProvider()._mapKeyToParentNodePath.set(JSON.stringify(s.key),s.keyPath);const a=this._getChildren(e);return a&&this._processTreeArray(a,s.keyPath),s}_releaseNode(e){const t=this._getKeyForNode(e);this._deleteMapEntry(t,e);const r=this._getChildren(e);r&&this._releaseTreeArray(r)}_createKeyObj(e,t,r){let s=this._getId(e);const a=t?t.slice():[];return null==s?(this._setUseIndexAsKey(!0),a.push(this._incrementSequenceNum(r)),s=a):(a.push(s),this.options&&"siblings"===this.options.keyAttributesScope&&(s=a)),{key:s,keyPath:a}}_getId(e){let t;const r=null!=this.options?this.options.keyAttributes:null;if(null!=r){if(Array.isArray(r)){t=[];for(let s=0;s<r.length;s++)t[s]=this._getVal(e,r[s])}else t="@value"==r?this._getAllVals(e):this._getVal(e,r);return t}return null}_getVal(e,t,r){if("string"==typeof t){const r=t.indexOf(".");if(r>0){const s=t.substring(0,r),a=t.substring(r+1),i=e[s];if(i)return this._getVal(i,a)}}return!0!==r&&"function"==typeof e[t]?e[t]():e[t]}_getAllVals(e){return"string"==typeof e||"number"==typeof e||"boolean"==typeof e?e:Object.keys(e).map(t=>this._getVal(e,t))}_getNodeMetadata(e){return{key:this._getKeyForNode(e)}}_getNodeForKey(e){return this._getRootDataProvider()._mapKeyToNode.get(JSON.stringify(e))}_getKeyForNode(e){return this._getRootDataProvider()._mapNodeToKey.get(e)}_setMapEntry(e,t){const r=this._getRootDataProvider(),s=JSON.stringify(e);r._mapKeyToNode.has(s)&&a.warn(`Duplicate key ${s} found in ArrayTreeDataProvider.  Keys must be unique when keyAttributes ${this.options.keyAttributes} is specified`),r._mapKeyToNode.set(s,t),r._mapNodeToKey.set(t,e)}_deleteMapEntry(e,t){const r=this._getRootDataProvider();r._mapKeyToNode.delete(JSON.stringify(e)),r._mapNodeToKey.delete(t)}_incrementSequenceNum(e){const t=this._getRootDataProvider(),r=t._mapArrayToSequenceNum.get(e)||0;return t._mapArrayToSequenceNum.set(e,r+1),r}_getUseIndexAsKey(){return this._getRootDataProvider()._useIndexAsKey}_setUseIndexAsKey(e){return this._getRootDataProvider()._useIndexAsKey=e}_getLeafNodeFilter(e){return{op:"$or",criteria:[e,{op:"$and",criteria:[{op:"$ne",attribute:this._childrenAttr,value:null},{op:"$ne",attribute:this._childrenAttr,value:void 0}]}]}}_applyLeafNodeFilter(e){if(e&&e.filterCriterion){const r=t.extend({},e);r.filterCriterion=this._getLeafNodeFilter(r.filterCriterion),r.filterCriterion.filter=e.filterCriterion.filter,e=r}return e}_getTreeMetadata(e,t){let r=!1,s=e.key;return(null==this.options||null==this.options.keyAttributes||"siblings"==this.options.keyAttributesScope||"@index"==this.options.keyAttributes||this._getUseIndexAsKey())&&(r=!0),r&&(s=this._parentNodePath?this._parentNodePath.slice():[],s.push(e.key)),e=this._getNodeMetadata(this._getNodeForKey(s))}_compareChildren(t,r){let s=!0;const a=t[this._childrenAttr],i=r[this._childrenAttr],o="function"==typeof a?a():a,n="function"==typeof i?i():i;if(!o&&n||o&&!n)s=!1;else if(o&&n)if(o.length!==n.length)s=!1;else for(let t=0;t<o.length;t++)if(!e.Object.compareValues(o[t],n[t])){s=!1;break}return s}}return s.EventTargetMixin.applyMixin(i),e._registerLegacyNamespaceProp("ArrayTreeDataProvider",i),i});
//# sourceMappingURL=ojarraytreedataprovider.js.map